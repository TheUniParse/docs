… ★ • › » ⁂ ⁑ × ÷ € ← → ↑ ↓ ↔ ↕ ⇆ π ♪ ≠ ≈ ± © § Ø ƒ † ⁰ ₱
★markup:
  <table style=position:relative cellspacing=0'2d>
    <captipn style=caption-side:top'd|bottom>title</caption>
    <thead style=position:sticky;top:0>
      <tr>
        <th d'style=font-wieght:bold;text-align:center></th> …
      </tr> …
    </thead>
    <tbody> <!--can be several table-budies-->
      <tr> <td></td> … </tr> …
    </tbody>
    <tfoot> <tr><td colspan=0>note</td></tr> </thead>
  </table>

★spanning:
  <th|td rowspan=# colspan=#> <!--#€[0,65534], 0=all-->

★grouping: (useless, instead use css :nth-child(an+b) selector)
  *grouping-rows: by <thead> <tbody>'s <tfoot>
  *columns: below <caption> add:
    •simple: <colgroup span=0></colgroup> …
    •advanced: styling|scripting:
      <colgroup>
        <col id=start> <col id=middle span=#>… <col id=end>
      </colgroup> …

★accessibility:
  •add <caption>, or <figure>|<figcaption>
  •add scope|headers attributes:
   <th scope=row|column|rowgroup|colgroup>…</th>
   <td headers="th1id th2id …">…</td>

★style: display:table'd-UA|inline-table;
  table-layout:auto'd|fixed(apply width, else first row width);
  /*auto: ignore width, slowly calculate & set wider row width*/
  border-collapse↓:separate'd|collapse;
  ›if (b-collapse↓:separate) {empty-cells:show'd|hide;
    b-spacing↓: h=v'length| h v;     /*<table cellspacing=2d>*/}
•caption{caption-side:top'd|bottom}






