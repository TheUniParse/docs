class Superclass {
 constructor(a, b, c) {
  this.aa = a;
  this.bb = b;
  this.cc = c;
 }
 lowlevel1(n) {
  console.log(n + this.aa);
 }

 lowlevel2(n) {
  console.log(n + this.bb);
 }
 lowlevel3(n) {
  console.log(n + this.cc);
 }
 core(n) {
  console.log("a:" +
   this.aa + " b:" + this.bb + " c:" + this
   .cc);
  this.lowlevel1(n);
  this.lowlevel2(n);
  this.lowlevel3(n);
 }
}
Superclass.cc = "update";
class Subclass extends Superclass {
 constructor(A, B, C, D) {
  super(A, B, C);
  this.dd = D;
 }
 lowlevel4(n) {
  console.log(n + this.dd);
 }
 core(n) {
  console.log("a:" +
   this.aa + " b:" + this.bb + " c:" + this
   .cc + " d:" + this.dd);
  this.lowlevel1(n);
  this.lowlevel2(n);
  this.lowlevel3(n);
  this.lowlevel4(n);
 }
};
var instance = new Subclass(1, 2, 3, 4);
console.log(Superclass);
console.log(Subclass);
console.log(instance);
instance.core(100)
var instance1 = Object.create(instance);
instance1.ee = "fixed";
instance1.lowlevel5 = function(n) {
 console.log(n + this.ee);
}
instance1.core = function(n) {
 console.log("a:" +
  this.aa + " b:" + this.bb + " c:" + this
  .cc + " d:" + this.dd + " e:" + this.ee);
 this.lowlevel1(n);
 this.lowlevel2(n);
 this.lowlevel3(n);
 this.lowlevel4(n);
 this.lowlevel5(n);
}
console.log(instance1);
instance1.core(100);

