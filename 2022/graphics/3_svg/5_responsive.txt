

*viewport & viewBox:
  •viewport:
    ›is browser-window(iframe-like) display full|part of viewBox
    »established by width='', height='' in svg|img|object|iframe
      ›if width|height omitted, it wii be d'100%
        _issue: IE by defualt set {width: 300px; height: 150px;}
        _fix: set {width: 100%; height: auto;}
    ›it have #fixed viewport-coordinate-system, x=y=0 at top-left corner, (x+→right) & (y+→bottom).
    
  •viewBox:
    ›syntax: viewBox='minX minY width height'
    ›is drawing-space(canvas-like)(rectangle of infinity-canvas) called 'User-space'
    »established by viewBox='minX minY width height' in svg|symbol|pattern|marker elements.
    »it have User-coordinate-system identify to vcs
      ›we can define origin(minX minY), d'origin(0 0)
        _css://transform: traslate(-minX -minY);
      ›all svg-elementds positions & dimensions rendered in ucs
      ›if viewBox='' omitted, ucs===vcs.



*aspect ratio:
  •syntax:
    ›preserveAspectRatio="<defer?> <align> <meer'd|slice>"
    ›d'preserveAspectRatio='xMidYMid meet'
    
  •description:
    »defer: applay just in svg <image>, optional
    »align values: (aspect ratio preserved in nine-values)
      ›none: unpreverved aspect-ratio (meet|slice useless)
      ›xMinYMin: <min-x|y>(viewBox) match x=y=0(viewport): 0% 0%
      ›xMinYMid: minX → x0, minY + height/2 → h/2: 0% 50%
      ›xMinYMax: minX → x0, minY + h → h: 0% 100%
      ›xMidYMin: minX + width/2 → w/2, minY → y0: 50% 0%
      ›d'xMidYMid: minX + w/2 → w/2, minY + h/2 → h/2: 50% 50%
      ›xMidYMax: minX + w/2 → w/2, minY + h → h: 50% 100%
      ›xMaxYMin: minX + w → w, minY → y0: 100% 0%
      ›xMaxYMid: minX + w → w, minY + h/2 → h/2: 100% 50%
      ›xMaxYMax: minX + w → w, minY + h → h: 100% 100%
    »meet'd: contain-like (entire viewBox in viewport), optional
    »slice: cover-like (entire|sliced-off viewBox in viewport), optional
    
  •if aspect ratio(width/height) matched(viewBox = viewport), then 1unit(ucs minX=minY) = # Unit(vcs x=y),
    »if ucs(width|height) > vcs(width|height), 
      ›# € ]0, 1[
      ›scale-down #x, zoom-out
    »if ucs(width|height) = vcs(width|height)|viewBox-omitted, 
      ›# = 1, no scale|zoom
    »if ucs(width|height) < vcs(width|height), 
      ›# € ]1, ∞[
      ›scale-up #x, zoom-in

  •if aspect ratio not-matched, by defualt:
    ›entire viewBox fits & cintered(vertically & horizontally) inside viewport.
    ›viewBox aspect ratio preserved.
    
  •more info:
    https://www.sarasoueidan.com/blog/svg-coordinate-systems/



*responsive svg:
  •omitt (viewport)width|height & set viewBox
    »issue1: IE by defualt set {width: 300px; height: 150px;}
      ›fix: set {width: 100%; height: auto;}
    »issue2: scaling with grid|flexbox
      ›fix: test & see stuckoverflow
  •adabtive icons:
    »issue: in scale-down we lose details
      »fix: 
        ›creat responsive-svg with sprite of multi versions,
        ›use media-queries:
          _css://@media all and (max-width:'bigToSmall'px){
            #svgElements{
              /*change*/
            }
          }