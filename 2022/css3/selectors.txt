… ★ • › » ⁂ ⁑ × ÷ € ← → ↑ ↓ ↔ ↕ ⇆ π ♪ ≠ ≈ ≤ ≥ ± © § Ø ƒ † ⁰ ₱
★specificity'selector-weight: (specific# ,> generic#).
  •(#id, .class?:pseudoClass?[attr], tag?::pseudoElement).
    ›*?:where((#,#,#))=(0,0,0), :not((#,#,#))=(#,#,#).
    ›:is((#,#,#))=(0,0,1|0,1,0|0,0,1) = 1 heavy-specific-type.

★basic: *{universal asterisk target all els, (0,0,0)}
  tag{(0,0,1)} .classifyEls{(0,1,0)} #uniqueIdentify{(1,0,0)}
  [attribute]{(0,1,0)} [att=v]{} [att=v i]{caseInsencitive lv4}
    [att*=Vpart]{…v…} [att~=spaceV]{… v …} [att|=hyphenV]{…-v-…}
    [att^=valPrefix]{v…} [att$=valSufix]{…v} /*tilde~, caret^*/
  ›contextual combinators: unaffect specifisity.
    s1s2…{specific} s1,s2,…{group} sParent>sChild{direct child}
    sAncestor sDescondant{}, ex[s0 s#{} → s0 s1 s2 … s#{}].
    s1+s2{only next sibling} s1~s2{all subsequent siblings}

★pseudoElement(0,0,1): elPart, used? once in each selector::End
  ::selection≠Ios15?{color;bg-color;text-shadow?decorationCSS2}
  :?::first-letter/*of line1 of #block-lvl-els*/{vertical-align;
    font;text-shadow?transform?decoration?-*;letter?word-spacing
    line-height;margin;padding;border;box-shadow;float;color;bg}
    ›include all '"%&#@!*?/\.:,…;L) symbols connected to letter1
  :?::first-line/*#block-lvl-els*/{
    <::first-letter>≠margin;padding;border;box-shadow;float}
  ::placeholder/*input?textarea*/{<::line1>-*;color:lightgray'd}
  :?::before?after/*≠replacedEls*/{content; display:inline'd}
    »content: none| normal|
    [<img>|''|attr()|counter|no-?open?close-quote]…/'alt'≠S19F4?
      »counter(name,style?) counters(name,'nest separater',sty?)
       ›style: disq|circle|square|lower?upper-roman?alpha=latin |decimal?-leading-zero|lower-greek'αβγ|urdu'ar#-moz4|…
    ›.paren/*=child1*/{ counter-reset: none'd|[name ±#0d?] …;
      el{ counter-increment: none'd|[name ±#1d?] …}
      el:nth-child(#){ counter-re?set≠S19:<reset>}}//reset=set+1
  ::marker≠S19{font;white-space;color;direction;content:;}
    ›applyTo: li| summary| el?::pseudoElement{display:list-item}
  ::cue?cue(selector)≠F4{bg;color;opacity;visibility;font;
    text-shadow?decoration?-*;line-height;white-space;outline}
    ›style track.Vtt of vedio, bg apply individually to each cue
  ::part(n1 …){/*<template><shadowTree-el part='n1 …'>*/}
  ::slotted(*|selector){/*under <template><slot>*/}
  












★pseudo classes:
  *states: order required
    •unvisited: a:link{}
    •visited: a:visited{}
  l4•visited|unvisited: a:any-link{}
    •selected: a:focus{}
  l4•selected-descondant a:focus-whithin{}
      ›ex: <div style=:focus-whithin{}> <a></a>…<input> </div>
           <!-- select div if any els inside it selected -->
    •hovered: a:hover{}
    •while clicking: a:active{}
    •e:target{} 
      html: <e id="e-id"></e>…<a href="#e-id"></a>…
      url: website.io#e-id
      ›Note: to clear target click on / html: <a href="#"></a>
    •e:
     
  *structure:
  l4•:is(el, [att], :pseudo-class, …) p{}
      select any <p> inside <el1> & [att] & :pseudo-class & …
      Note :is(::pseudo-elements) invalid !!
  l4•:where(el1, el2, :pseudo-class, …) p:hover{}
      same as :is(), but have different specificy weight:
        :is() el{} → [0][1][1]
        :where() el{} → [0][0][1]
        el{} → [0][0][1] + order
      "el{}" can override ":were() el{}", but not ":is() el{}"
    •:root{--variables:values;}brefer to <html>with high specify
    •e:empty{} have no content even space except comments
    •pr:first-child{}
    •pr:last-child{}
      »body>el:last-child{} not-work !!!
    •pr:first-of-type{}
    •pr:last-of-type{}
    •pr:not(#child1-selector):not(.another:last-child)…{}
    •pr:nth-child(even=2n+1|obb=2n|(a€Ž)n+(b≥0)):nth-child(an+b)…{}
      »ex: pr:nth-child(4n+60):nth(-4n+80){}
        select 60,64,68,72,76 and 80 from 100
    •pr:nth-last-child(an+b)…{}
    •pr:nth-first-of-type(an+b)…{}
    •pr:nth-last-of-type(an+b)…{}
    •pr:only-child{}
      select any pr have 1 child
    •pr:only-of-type{}
      select any descondant-type who dont havd siblings
  
      
  *form:
    •i:checked{} or :checked{}
      if user select|check it.
  l4•i:default{} or :default{}
      if it have att: checked|selected|type="image|submit"
      to select labels :default+label{}
    •i:disabled{opacity:.3;} 
      if it have att: disabled
    •i:enabled{} if it not disabled.
  l4•i:in-range{} match att; min max (type=number|time's…)
  l4•i:out-of-range{}
      do not match att: min max (required type=number)
  l4•form,i:valid{}           (maxlength=|minlength=|required)
  l4•form,i:invalid{} if user input incorrect for  requirement.
  l4•i:required{} if it have att: required
  l4•i:optional{} if it do not have att: required
  l4•i:read-only{} 
      if it have att: readonly(d'*:not(input))
  l4•i:read-write{} 
      if it not have att: readonly, content'editable
  l4•i:indeterminate + label{}
      unselected i[type=checkbox], i[type=radio](77gs-noSafari), <progress></progress>
  l4•i:placeholder-shown{} /* pseudo-class */
      select input|textarea who its placeholder are displaying

  *language:
   •q:lang(en|fr|ar){quotates:'«' '”';} 
     target att: lang="" or what meta incloded, en'd