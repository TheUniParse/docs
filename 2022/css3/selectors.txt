… ★ • › » ⁂ ⁑ × ÷ € ← → ↑ ↓ ↔ ↕ ⇆ π ♪ ≠ ≈ ≤ ≥ ± © § Ø ƒ † ⁰ ₱
★specificity'selector-weight: (specific# ,> generic#).
  •(#id, .class?:pseudoClass?[attr], tag?::pseudoElement).
    ›*?:where((#,#,#))=(0,0,0), :not((#,#,#))=(#,#,#).
    ›:is((#,#,#))=(0,0,1|0,1,0|0,0,1) = 1 heavy-specific-type.

★basic: *{universal asterisk target all els, (0,0,0)}
  tag{(0,0,1)} .classifyEls{(0,1,0)} #uniqueIdentify{(1,0,0)}
  [attribute]{(0,1,0)}   [att=v]{}    [… i]{caseInsencitive lv4}
    [att*=Vpart]{…v…} [att~=spaceV]{… v …} [att|=hyphenV]{…-v-…}
    [att^=valPrefix]{v…} [att$=valSufix]{…v}  /*tilde~, caret^*/
  ›contextual combinators: unaffect specifisity.
    s1s2…{specific} s1,s2,…{group} sParent>sChild{direct child}
    sAncestor sDescendant{}, ex[s0 s#{} → s0 s1 s2 … s#{}].
    s1+s2{only next sibling} s1~s2{all subsequent siblings}

★pseudoElement(0,0,1): part of el, basicSelector::onceInEnd.
  ::selection≠Ios15?{color;bg-color;text-shadow?decorationCSS2}
  :?::first-letter/*of line1 of #block-lvl-els*/{vertical-align;
    font;text-shadow?transform?decoration?-*;letter?word-spacing
    line-height;margin;padding;border;box-shadow;float;color;bg}
    ›include all '"%&#@!*?/\.:,…;L) symbols connected to letter1
  :?::first-line/*#block-lvl-els*/{
    <::first-letter>≠margin;padding;border;box-shadow;float}
  ::placeholder{<::line1>-*;color:lightgray'd}/*input?textarea*/
  :?::before?after{content; display:inline'd}   /*≠replacedEls*/
    »content: none| normal|
    [<img>|''|attr()|counter|no-?open?close-quote]…/'alt'≠S19F4?
      »counter(name,style?) counters(name,'nest separater',sty?)
       ›style: disq|circle|square|lower?upper-roman?alpha=latin |decimal?-leading-zero|lower-greek'αβγ|urdu'ar#-moz4|…
    ›.paren/*=child1*/{ counter-reset: none'd|[name ±#0d?] …;
      el{ counter-increment: none'd|[name ±#1d?] …}
      el:nth-child(#){ counter-re?set≠S19:<reset>}}//reset=set+1
  ::marker≠S19{font;white-space;color;direction;content:;}
    ›applyTo: li| summary| el?::pseudoElement{display:list-item}
  ::cue?cue(selector)≠F4{bg;color;opacity;visibility;font;
    text-shadow?decoration?-*;line-height;white-space;outline}
    ›style track.Vtt of vedio, bg apply individually to each cue
  ::part(n1 …){}       /*<template><shadowTree-el part='n1 …'>*/
  ::slotted(*|selector){}    /*under <template><slot><targets>*/

★pseudoClass(0,1,0): state of el.
  :lang(en'd?…){quotes; …??}                  /*<el lang=en?…>*/
 *order: any-link> link> visited> hover> focus?-*> active.
 •location: :scope{}/*inCss=:root, inJS=el who call the method*/
    //ex: el.querySelector?All|closest|matches(':scope>div')
  :any-link?link≠visited{}/*<a?area href=>,in S19 <link href=>*/
    :visited{color;bg-c;border-<side?>-c;outlne-c;column-rule-c;text-decoration?emphasis-c}{fill?stroke}  /*access History*/
  :target{}/*<el id=fragment> URL#fragment ←<a href=#fragment>*/

 •user action: :active{}                      /*while clicking*/
  :hover{}   /*after el?pseudoElement, have some mobile issues*/
  :focus?-within?-visible≠S19{}
    ›onClick?tab+Enter <a href=#fragment> focus <el id=fragment>
    :focus-within{}  /*= (el:focus) #and (el descendant:focus)*/
    :focus-visible≠S19{}| :focus:not(:f-visible){outline:none;…}
      ›if user set always-focus=visible in settings.
      ›user navigate by tab?arrow?key-keyboard ≠ mouse?finger.
        <el accesskey55=B>, js93: el.accessKey='B'; usage: alt+B
        <el tabindex=±#≤32767>, +# before> +#+1 > 0, -#≠tabFocus
      ›els required keyboard to function as <input type=text?…>.
      ›script el.focus() after :focus-visible ≠ :not(:f-visible)

 •input: :-webkit27-autofill{≠ color|bg-image?color}
  :placeholder-shown{} <input?textarea placeholder=>before input
  :disabled≠enabled{opacity:.3d}        <form-control disabled>:
    input button textarea select optgroup option fieldset≠Edge4
  :checked|+label{}/*=on:<i type=radio?checkox> <option>≠style*/
  :default|+label::after{content:' (default)'; …}  /*+disabled*/
    ›<option selected>       <input type=radio?checkbox checked>
    ›first form <button type=sumbit'd> or <i type=image?submit>
  :indeterminate|+label{} <progress> <i type=radio≠S19?checkbox>
    var c=document.querySelectorAll('[type=checkbox]');
    for (var i=0; i<c.length; i++) {c[i].indeterminate=true}
  :read-write{} <any-el≠input contenteditable>        <textarea>
    <input type=text?pw?email?tel?url?search?number?time's>
  :read-only{} <any-el≠input>          <input?textarea readonly>
    <input type=radio?checkbox?submit?image?file?range?color>
  :required≠optional{} <input?textarea?select required>
  :in≠valid{}  <i?textarea?select max?minlength≠select required>
    <i max?min?step?value=times-format patern=>           <form>
  :in-range≠out-of-range{} <i type=number?range?time's min?max=>
 
… ★ • › » ⁂ ⁑ × ÷ € ← → ↑ ↓ ↔ ↕ ⇆ π ♪ ≠ ≈ ≤ ≥ ± © ✓ ✖ Ø † ⁰ ₱
 •structure:
  


  :is(el, [att], :pseudo-class, …) p{}
   select any <p> inside <el1> & [att] & :pseudo-class & …
   Note :is(::pseudo-elements) invalid !!
  :where(el1, el2, :pseudo-class, …) p:hover{}
   same as :is(), but have different specificy weight:
     :is() el{} → [0][1][1]
     :where() el{} → [0][0][1]
     el{} → [0][0][1] + order
   "el{}" can override ":were() el{}", but not ":is() el{}"
  :root{--variables:values;}brefer to <html>with high specify
  e:empty{} have no content even space except comments
  pr:first-child{}
  pr:last-child{}
   »body>el:last-child{} not-work !!!
  pr:first-of-type{}
  pr:last-of-type{}
  pr:not(#child1-selector):not(.another:last-child)…{}
  pr:nth-child(even=2n+1|obb=2n|(a€Ž)n+(b≥0)):nth-child(an+b){}
   »ex: pr:nth-child(4n+60):nth(-4n+80){}
     select 60,64,68,72,76 and 80 from 100
  pr:nth-last-child(an+b)…{}
  pr:nth-first-of-type(an+b)…{}
  pr:nth-last-of-type(an+b)…{}
  pr:only-child{}
   select any pr have 1 child
  pr:only-of-type{}
   select any descendant-type who dont havd siblings