… ★ • › » ⁂ ⁑ × ÷ € ← → ↑ ↓ ↔ ↕ ⇆ π ♪ ≠ ≈ ± © § Ø ƒ † ⁰ ₱
★insurting cascading style sheet: link|@import|style|style=
 <head>
   •<link href=external.css rel=stylesheet media=> <!--cached-->
   •<style>                                      <!--embedded-->
     •@import 'external.css' q1, q2; /*before any rule, cached*/
     /*rules= selector{declaration=properties:values}*/ </style>
 </head><body>
    <tag •style=/*inlineDeclarations*/></tag><body><!--inline-->

★inheritance: els build in hi|erar|čhical structure.
    ›Ançe|stors ? Des|cen|dants: high?low hierarchy lvl.
    ›parent?child: one hierarchy lvl high?low.
    ›sib|lings: same hierarchy level.
  •Descendants inherit some ancestors properties(font|color|…)(not border|background|…), & overrided by descendents styles.
  •some measurements inherit as absolute result: em?rem?%→ px↓.

★priorite: origin > specificity > order.
  •origin: User?>Author !important > Author > User > UA > w3.
  •selector specificity weight: (specific# ,> generic#).
    »(#id, .class?:pseudoClass?[attr], tag?::pseudoElement).
      ›*?:where((#,#,#))=(0,0,0), :not((#,#,#))=(#,#,#).
      ›:is((#,#,#))=(0,0,1|0,1,0|0,0,1) = 1 most-specific-type.
  •order: style=inline > embed<style> > external<link>?@import.
    ›cascade rule?declaration > previous ones.

★measurement(length):
  *absolute units: •real: in, cm, mm, q'uarter(=mm/4)74≠Safari
    •print: pt(point=in/72), pc(picas=12pt=in/6)
    •ppi resolution depending: px(pixel=in/96~135)
  *relative units: •rootElement m_width: rem(%→<html>)
      ›defined by UA-origin, can be adjusted by User.
    •Element m_width: em(%→parent) (like percentage)
      ›if el{font-size:10px}, then 1em=100%=10px| 1rem=16px'd
      ›h1:2em| h2:1.5em| h3:1.2em| h4:1em| h5:.85em| h6:.65em
    •current 0_width:ch(0→same_parent)
    •current x_height: ex(x→same_parent)
    •viewport: vw|vh|vmin|vmax
      <meta name=viewport content='w=device-w, initial-scale=1'>

★functions: ›can be: ±#| length| %| <time:s?ms>| <angle>| <frequency:Hz?kHz>| nested min?max?calc?clamp(<math-operations>)
  ›math operators: ±v1 ± ±v2 ± ±v3…| ±v*±#*±#…| ±v/±#/±#…
•calc(<math-operators>): set sum of math operator.
•min?max(mo1, mo2, …): set smallest?largest unordered sum.
•clamp(mo1,mo2,mo3):set middle(rel sum) limited by min & max sum
•var(--custom-property, fallback-value): store reused value of custom property declared in :root{--c-p: val;}.

★global values: •demo:     /*w3-css initial: *{display:inline}*/
    body{font-size:13px}         /*UA-origin: p{display:block}*/
    p:nth-child(1){font-size: inherit}                  /*13px*/
    p:nth-child(2){font-size: initial}                  /*16px*/
    p:nth-child(3){all: unset} /*font-size:13px;display:inline*/
    p:nth-child(4){all: revert} /*font-size:13px;display:block*/
  •revert: set inherit, else UA-origin value, else initial.
  •unset: set inherit, else initial.
    •inherit: set clocest ancestor #inheritable↓ value.
    •initial: set default w3-css value(≠UA-origin).

★defualt environment: various browsers = various UA-origins.
  ›initial & fix most UA-origin styles: @import 'reset.css';
  ›override UA-origin by author-origin: @import 'normalize.css';