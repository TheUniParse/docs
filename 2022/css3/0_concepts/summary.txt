… ★ • › » ⁂ ⁑ × ÷ € ← → ↑ ↓ ↔ ↕ ⇆ π ♪ ≠ ≈ ± © § Ø ƒ † ⁰ ₱
★insurting cascading style sheet: link|@import|style|style=
 <head>
   •<link href=external.css rel=stylesheet media=> <!--cached-->
   •<style>                                      <!--embedded-->
     •@import 'external.css' q1, q2; /*before any rule, cached*/
     /*rules= selector{declaration=properties:values}*/ </style>
 </head><body>
    <tag •style=/*inlineDeclarations*/></tag><body><!--inline-->

★priorite: origin > specificity > order > inheritance.
  •origin: User?>Author !important > Author > User > UA > w3.
  •selector specificity weight: (specific# ,> generic#).
    »(#id, .class?:pseudoClass?[attr], tag?::pseudoElement).
      ›*?:where((#,#,#))=(0,0,0), :not((#,#,#))=(#,#,#).
      ›:is((#,#,#))=(0,0,1|0,1,0|0,0,1) = 1 most-specific-type.
  •order: style=inline > embed<style> > external<link>?@import.
    ›cascade rule?declaration > previous ones.
  •inheritance: »els builded in hie|rar|čhical structure.
      ›Ançe|stors ? Des|cen|dants: high?low hierarchy lvl.
      ›parent?child: one hierarchy lvl high?low.
      ›sib|lings: same hierarchy level.
    »Descendants inherit some Ancestors properties font?color?… not border?background?…, & overrided by descendents styles.
      ›some relative measurement em?rem?% inherit as absolute px

★length measurement: •absolute: ›screen: pixel:px=in/(ppi≈96).
    ›real: in?≈2.54cm, mm?=4q'quarter≠Safari19.
    ›print: point:pt=in/(dpi≈72), pica:pc=12pt≈in/6.
  •relative: ›rem=html:root{font-size}, User can adjust it!!.
    »em=el{font-size}, just in typography em=.parent{font-size}.
      ›h1=2em h2=1.5em h3=1.2em h4=1em h5=.85em h6=.65em.
    ›ex=el{x-height}, ch=el{0-width}
    ›viewport: vw?vh?vmin?vmax.
      <meta name=viewport content='w=device-w, initial-scale=1'>

★functions: ›can be: ±#| length| %| <time:s?ms>| <angle>| <frequency:Hz?kHz>| nested min?max?calc?clamp(<math-operations>)
  ›math operators: ±v1 ± ±v2 ± ±v3…| ±v*±#*±#…| ±v/±#/±#…
•calc(<math-operators>): set sum of math operator.
•min?max(mo1, mo2, …): set smallest?largest unordered sum.
•clamp(mo1,mo2,mo3):set middle(rel sum) limited by min & max sum
•var(--custom-property, fallback-value): store reused value of custom property declared in :root{--c-p: val;}.

★global values: •demo:     /*w3-css initial: *{display:inline}*/
    body{font-size:13px}         /*UA-origin: p{display:block}*/
    p:nth-child(1){font-size: inherit}                  /*13px*/
    p:nth-child(2){font-size: initial}                  /*16px*/
    p:nth-child(3){all: unset} /*font-size:13px;display:inline*/
    p:nth-child(4){all: revert} /*font-size:13px;display:block*/
  •revert: set inherit, else UA-origin value, else initial.
  •unset: set inherit, else initial.
    •inherit: set clocest ancestor #inheritable↓ value.
    •initial: set default w3-css value(≠UA-origin).

★defualt environment: various browsers = various UA-origins.
  ›initial & fix most UA-origin styles: @import 'reset.css';
  ›override UA-origin by author-origin: @import 'normalize.css';