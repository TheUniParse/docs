@use 'sass:map';@use 'sass:list';@use 'sass:string';
@use 'sass:meta';@use 'sass:math';@use 'sass:color';
//@use 'partial';//@use 'partial' with ($font:serif,);
@use 'myFile';//@include meta.load-css(myFile);
//@include meta.load-css(partial,$with:('font':sans-serif,));
$module:partial;//can be unquoted two
//@include meta.load-css(#{$module},$with:('font':monospace,));
@include meta.load-css($module,$with:('font':monospace,));

@mixin a($a,$b){
  color: rgb(0 255 170);
  @if $b >= 10{color: rgb(229 255 0)}
  @else if $a==false{color: red}
  //@else{@debug '💡 ($a,$b):' ($a,$b);}
  //@else{@warn '⚠️ ($a,$b):' ($a,$b);}
  //@else{@error '⚠️ ($a,$b):' ($a,$b);}
}h1{@include a(true,9);}
//@debug if(condition,✓,✖);

@mixin list($args...){
  @each $arg in $args{
    h#{$arg}{color: hsl(calc($arg*10) 100% 50%)}
  }
}@include list(1,2,3,4);

@mixin nest($nest...){
  @each $a,$b,$c in $nest{
    #{$a}:before{color:$b;content:'' + $c + ' '}
  }
}//@include nest(h1 #fff ★,(h2 #ff0 ▶),(h3,#0f0,»),[h4 cyan ›]);
@each $a,$b,$c in (h1 #fff ★,(h2 #ff0 ▶),(h3,#0f0,»),[h4 cyan ›]){#{$a}:before{color:$b;content:'' + $c + ' '}}

@mixin map($args...){
  //@debug meta.keywords($args);
  @each $k,$v in meta.keywords($args){
    #{$k}:after{content:' ' + $v}
  }
}//@include map($h1:1,$h2:2,$h3:3,$h4:4);
@for $i from 4 through 1{h#{$i}:after{content:' ' + $i}}

//@each $c in (red blue){.#{'' + $c}{color:$c}}//list
//@each $k,$v in (invalid:✖,valid:✓) {##{'' + $k}:before{content:$v}}

//@for $i from 1 to 5{h#{$i}::first-letter{color:cyan}};
//@for $i from 1 through 4{h#{$i}::first-letter{color:cyan}};
//@for $i from 4 to 0{h#{$i}::first-letter{color:cyan}};
//@for $i from 4 through 1{h#{$i}::first-letter{color:cyan}};

//@while $condation-true{}

@function pow($a,$b:$a){$c:1;@for $_ from 1 through $b{$c:$c*$a}
  @return $c};//@debug pow(3);
@mixin mixin($selector,$warn:false){
  @if $warn{
    #{$s}:before{content:'💡Fun fact ';@content}
    #{$s}:after{content:' End💡';@content}
  }@else{
    #{$s}:before{content:'⚠️Head Up! ';@content}
    #{$s}:after{content:' End⚠️';@content}
  }
};//@include mixin('li:first-child',1){color:#bf0}
//@include mixin('li:nth-child(2)'){color: #f40}
@mixin mixin1($s,$warn:false){
  @if $warn{
    #{$s}:before{content:'💡Fun fact ';@content}
    #{$s}:after{content:' End💡';@content}
  }@else{
    #{$s}:before{content:'⚠️Head Up! ';@content}
    #{$s}:after{content:' End⚠️';@content}
  }
};@include mixin1('li:first-child',1){color:#bf0}
@include mixin1('li:nth-child(2)'){color:#f40}

//@debug meta.module-functions(color);

//@debug color.red(teal);//0
//@debug color.green(teal);//128
//@debug color.blue(teal);//128
//@debug color.alpha(#fbc5);//.333333
//@debug color.hue(#fbc5);//346deg

//@debug color.saturation(#6115);//71.42%
  //@debug color.saturation(#5445);//11.11%
//@debug color.lightness(#ff00);//50%
  //@debug color.lightness(#ff10);//53.3333%
  //@debug color.lightness(#ffe0);//96.6666%
//@debug color.whiteness(#5445);//26.66666%
  //@debug color.whiteness(#fee5);//93.333%
//@debug color.blackness(#5445);//66.66666%
  //@debug color.blackness(#fee5);//0%

//@debug color.adjust(#f00,$red:-255);//black
//@debug color.adjust(#f00,$hue:-36060);//magenta
//@debug color.adjust(#f00,$saturation:-100%);//gray
//@debug color.adjust(#f001,$alpha:.2);//#f004

//@debug color.change(#f00,$hue:-36060);//magenta
//@debug color.change(#f00,$saturation:0%);//gray
//@debug color.change(#f001,$alpha:0);//red

//@debug color.invert(white);//black
//@debug color.invert(aqua,33);//#54abab
//@debug color.invert(hsl(0,100%,51%,.2));//hsl(154,100%,47%,.2)

//@debug color.blackness();
//@debug color.grayscale();
//@debug color.mix();
//@debug color.scale();
//@debug color.hwb();
//@debug color.ie-hex-str();
//@debug color.complement();






// @use 'variables' with ($var: 'configured ');
// @use 'sass:meta'; @use 'sass:selector';
// p::before{content:variables.$var;color:#0f0}
// h1{color: variables.$c1;}h2{color: variables.$c2;}
// h3{color: variables.$c3;}h4{color: variables.$c4;}

// @mixin a($n,$v:' ✖',$c:false){
//   >:nth-child(#{$n}):after{content:$v;color:if($c,#0f0,red)}
// }
// body>div{@include a(3,' ✓',true); @include a(2)}
// body{>div{background: url(gaara.webp) center/contain no-repeat}}
// body>div>{@at-root div:first-of-type{
//   background-color: #010c;
//   margin:.5em{left:0}
// }}

// @mixin b{#{if(&,'&.a','.a')}{color:#07f}}
// .b{@include b}//.b.a{color:#07f}
// @mixin c{#{if(&,'&.a','.a:before')}{content: '♪ ';color:#827}}
// @include c;//.a:before{content: '♪';color:#827}

// @mixin d($child){@at-root #{selector.unify(&,$child)}{@content}}
// body .div0 .a{
//   @include d('h2::first-letter'){color: #008cff;}
//   @include d('.b::first-letter'){color: #0f0;}
// }
