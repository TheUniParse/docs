
★responsive images(multi versions):
  *responsive layout(viewport width)
    •markup:
        <img src='fallback.webp' alt='description'
          srcset='
            img240.webp 240w, <!-- 1~240px 1x -->
            img480.webp 480w, <!-- 241~480px 1x -->
            img672.webp 672w' <!-- 481~↑↑px 1x -->
          sizes='
            (max-width: 480px) 100vw, 
            (max-width: 960px) 70vw, 
            240px'>
          
    •resizing(manual by photoshop):
      »percentage: 0.01%~100%~↑↑%, resizing width & height by original dimensions ratio.
        ›else set width & height manually.
      »resizing-quality: nearest neighbor, bilinear, bicubic'd, bicubic smooth, bicubic sharper.
        
    •generate multi img-versions based on file-size:
      »link: https://responsivebreakpoints.com
      »upload original-img, set target:
        ›max-width, min-width
        ›size steps (20kb'recomended|40kb|80kb|…)
        ›more !!
      »download & copy html markup to document, & done!!!.   
      
    •Notes:
      »chrome testing:
        ›more-tools/Developer-tools/ ctrl+shift+i
        ›Toggle device toolbar ctrl+shift+m
          _show device pixel ratio(else: DPR=2x'd).
        ›Network: record-downloads ctrl+r
        ›reload-button/Empty Cache and Hard Reload
      »if browser download img672, and window narrow to 200px, then the browser will downscale img672 insted of download another images with less quality likw img480, img240.



  *art-direction:
    •full controll of image content:
      »link: https://responsivebreakpoints.com
        ›more info for automatic: https://www.smashingmagazine.com/2016/09/automating-art-direction-with-the-responsive-image-breakpoints-generator/
      »upload original picture(2400x1600), set target:
        ›max-width, min-width
        ›size steps (20kb'recomended|40kb|80kb|…)
        ›max images up to 40.
        ›art-direction
          _support smartphons, tablets, small-laptops, desktops.
          _select Aspect ratio w:h
            •crop important content by analysis-methods like face-detection, edges-detection, visual uniqueness.
          _select css width size by vw unit.
        ›support retina screens 2x
      »download & copy html markup to document, & done!!!.
      
    •markup:
        <picture>
          <!-- smartphone 1:1 100% 1x 2x -->
          <source
            media='(max-width: 767px)'
            sizes='(max-width: 1534px) 100vw, 1534px'
            srcset='…'>
            
          <!-- tablet 4:3 70% 1x 2x -->
          <source
            media='(min-width: 768px) and (max-width: 991px)'
            sizes='(max-width: 1983px) 70vw, 1388px'
            srcset='…'>
            
          <!-- small-laptop 16:9 60% 1x 2x -->
          <source
            media='(min-width: 992px) and (max-width: 1199px)'
            sizes='(max-width: 2400px) 60vw, 1440px'
            srcset='…'>
            
          <!-- larg-desktops original-ratio 40% 1x 2x -->
          <source
            sizes='(max-width: 5500px) 40vw, 2200px'
            srcset='…'>
            
          <img src='IEfallback.format' alt=''>
        </picture>



  *high density desplays: 
    •markup:
      <img src='img.webp' alt='' <!-- 100px -->
        srcset='
          img@.5x.wevp .5x,      <!-- 50px -->
          img@1.5x.wevp 1.5x,    <!-- 150px -->
          img@2x.wevp 2x,        <!-- 200px -->
          img@3x.wevp 3x'>       <!-- 300px -->

    •export-as: ctrl+shift+alt+w(photoshop)
      ›scale all box: click "+" bitton & select (.25x~3x)'s.
    
    •work at @1x scale: (better then @2x)
      ›save time of doublication every think, & mistakes (-math)
      ›Pixel-snap feature unstable on @2x (fix issue by @1x)
      ›photoshop-work-layers @2x = 2 × @1x size (pc-perfermence)

    •avoid upscale blur @1x: (photoshop)
      »work with svg if it possible, else:
        1›creat new layer with targer @1x width & height
        2›add original image ≥ @3x|@2x by 'file→place linked'
          _issue: in Phs-2018 place-linked jpeg file ignored
          _fix: convert jpeg to psd before place-linked.
        3›dillet the empty layer & work with the place-linked.
    
    •automatic:
      »paid servers:
        ›(cloudinary.com)
        ›(akamai.com)
        ›(kraken.io)
        
      »free web-app
        ›nodjs: required search or read book rwd-2020 !!
        ›https://docs.google.com/spreadsheets/u/0/d/1e4qdGEoq7tqDCnY7iSSnl3OFoWkzhRfVAly-73A3uCc/htmlview




































